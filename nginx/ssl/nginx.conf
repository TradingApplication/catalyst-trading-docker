# Catalyst Trading System - Nginx Configuration
# Version: 2.1.0 - Corrected for actual service names and ports

# Upstream definitions (corrected service names and ports)
upstream dashboard {
    server web-dashboard:5010;
}

upstream api {
    server coordination-service:5000;
}

# Additional service upstreams for direct access if needed
upstream news_service {
    server news-service:5008;
}

upstream scanner_service {
    server scanner-service:5001;
}

upstream reporting_service {
    server reporting-service:5009;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=dashboard_limit:10m rate=30r/s;

server {
    listen 80;
    server_name catalyst-trading-system2-54e6n.ondigitalocean.app;
    
    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name catalyst-trading-system2-54e6n.ondigitalocean.app;
    
    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/catalyst-trading-system2-54e6n.ondigitalocean.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/catalyst-trading-system2-54e6n.ondigitalocean.app/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self' ws: wss:;" always;
    
    # Dashboard routes (main interface)
    location / {
        limit_req zone=dashboard_limit burst=20 nodelay;
        
        proxy_pass http://dashboard;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for real-time updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # API routes (coordination service)
    location /api/ {
        limit_req zone=api_limit burst=5 nodelay;
        
        proxy_pass http://api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Direct service endpoints (for debugging/monitoring)
    location /services/news/ {
        proxy_pass http://news_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;  # Reduce logging for monitoring endpoints
    }
    
    location /services/scanner/ {
        proxy_pass http://scanner_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }
    
    location /services/reporting/ {
        proxy_pass http://reporting_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }
    
    # Health check endpoint (nginx level)
    location /health {
        access_log off;
        return 200 "nginx healthy\n";
        add_header Content-Type text/plain;
    }
    
    # System health check (proxied to coordination service)
    location /system/health {
        proxy_pass http://api/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Dashboard API endpoints
    location /dashboard/api/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://dashboard/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static files (if any)
    location /static/ {
        alias /app/static/;
        expires 1d;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
    }
    
    # Favicon
    location /favicon.ico {
        access_log off;
        log_not_found off;
        return 204;
    }
    
    # Robots.txt (prevent indexing of trading system)
    location /robots.txt {
        access_log off;
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to hidden files and sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Additional server block for monitoring/admin (optional)
server {
    listen 8080;
    server_name catalyst-trading-system2-54e6n.ondigitalocean.app;
    
    # Basic auth for admin access (add auth file)
    # auth_basic "Catalyst Admin";
    # auth_basic_user_file /etc/nginx/.htpasswd;
    
    # Direct service health checks
    location /coordination/health {
        proxy_pass http://coordination-service:5000/health;
        access_log off;
    }
    
    location /dashboard/health {
        proxy_pass http://web-dashboard:5010/health;
        access_log off;
    }
    
    location /news/health {
        proxy_pass http://news-service:5008/health;
        access_log off;
    }
    
    location /scanner/health {
        proxy_pass http://scanner-service:5001/health;
        access_log off;
    }
    
    location /pattern/health {
        proxy_pass http://pattern-service:5002/health;
        access_log off;
    }
    
    location /technical/health {
        proxy_pass http://technical-service:5003/health;
        access_log off;
    }
    
    location /trading/health {
        proxy_pass http://trading-service:5005/health;
        access_log off;
    }
    
    location /reporting/health {
        proxy_pass http://reporting-service:5009/health;
        access_log off;
    }
}